#*** /home/pi/linuxcnc/configs/sim.axis.xhc-hb04/xhc-hb04-layout2_mm.ini.expanded
#*** Created: Mon 31 Jan 2022 09:07:42 AM CET
#*** Autogenerated file with expanded #INCLUDEs


#*** Begin #INCLUDE file: mm_base.inc
[DISPLAY]
DISPLAY =               axis
CYCLE_TIME =            0.100
POSITION_OFFSET =       RELATIVE
POSITION_FEEDBACK =     ACTUAL
MAX_FEED_OVERRIDE =     1.2
MAX_SPINDLE_OVERRIDE =  1.0
PROGRAM_PREFIX =        ../../nc_files/
INTRO_GRAPHIC =         linuxcnc.gif
INTRO_TIME =            5
EDITOR =                gedit
GEOMETRY =              XYZABCUVW
INCREMENTS = 1 mm, .01 in, .1mm, 1 mil, .1 mil, 1/8000 in

[FILTER]
PROGRAM_EXTENSION = .png,.gif,.jpg Grayscale Depth Image
PROGRAM_EXTENSION = .py Python Script
png = image-to-gcode
gif = image-to-gcode
jpg = image-to-gcode
py = python
duh
[TASK]
TASK =                  milltask
CYCLE_TIME =            0.001

[RS274NGC]
PARAMETER_FILE = sim-9axis.var
SUBROUTINE_PATH   = ../../nc_files/ngcgui_lib:../../nc_files/ngcgui_lib/utilitysubs
# for demo of M110:
USER_M_PATH       = ../../nc_files/ngcgui_lib/mfiles

[EMCMOT]
EMCMOT =                motmod
COMM_TIMEOUT =          1.0
SERVO_PERIOD =          1000000

[EMCIO]
EMCIO =                io
CYCLE_TIME =           0.100
TOOL_TABLE =           sim_mm.tbl
TOOL_CHANGE_POSITION = 0 0 2

[AXIS_X]
MIN_LIMIT = -254
MAX_LIMIT = 254
MAX_VELOCITY = 30.48
MAX_ACCELERATION = 508

[JOINT_0]
TYPE =                  LINEAR
MAX_VELOCITY =          30.48
MAX_ACCELERATION =      508
MIN_LIMIT =             -254
MAX_LIMIT =             254
HOME_SEARCH_VEL =       127
HOME_LATCH_VEL =        25.4
HOME_SEQUENCE =         1

[AXIS_Y]
MIN_LIMIT = -254
MAX_LIMIT = 254
MAX_VELOCITY = 30.48
MAX_ACCELERATION = 508

[JOINT_1]
TYPE =                  LINEAR
MAX_VELOCITY =          30.48
MAX_ACCELERATION =      508
MIN_LIMIT =             -254
MAX_LIMIT =             254
HOME_SEARCH_VEL =       127
HOME_LATCH_VEL =        25.4
HOME_SEQUENCE =         1

[AXIS_Z]
MIN_LIMIT = -50.8
MAX_LIMIT = 101.6
MAX_VELOCITY = 30.48
MAX_ACCELERATION = 508

[JOINT_2]
TYPE =                  LINEAR
MAX_VELOCITY =          30.48
MAX_ACCELERATION =      508
MIN_LIMIT =             -50.8
MAX_LIMIT =             101.6
HOME_SEARCH_VEL =       127
HOME_LATCH_VEL =        25.4
HOME_SEQUENCE =         0

[AXIS_C]
MAX_VELOCITY = 90.0
MAX_ACCELERATION = 1200.0

[JOINT_3]
TYPE =                  ANGULAR
MAX_VELOCITY =          90.0
MAX_ACCELERATION =      1200.0
HOME_SEARCH_VEL =       0.0
HOME_LATCH_VEL =        0.0
HOME_SEQUENCE =         1
#*** End   #INCLUDE file: mm_base.inc

#*** Begin #INCLUDE file: mm_trivkins.inc
[TRAJ]
NO_FORCE_HOMING =          1
COORDINATES =              X Y Z C
LINEAR_UNITS =             mm
ANGULAR_UNITS =            degree
DEFAULT_LINEAR_VELOCITY = 1.0
DEFAULT_ANGULAR_VELOCITY = 45.0
POSITION_FILE =            position9.txt
MAX_LINEAR_VELOCITY =      1.2
MAX_ANGULAR_VELOCITY =     90.0

[KINS]
KINEMATICS = trivkins
JOINTS = 4
#*** End   #INCLUDE file: mm_trivkins.inc

#*** Begin #INCLUDE file: layout2.inc
[XHC_HB04_BUTTONS]
# use button names according to layout file LIB:xhc-hb04-layout{n}.cfg
# note: "start-pause" is connected for standard behavior
#        controlling halui.pause/halui.resume/halui.run
# these are examples, edit as required:

goto-zero   = halui.mdi-command-00
# synthesized per-axis buttons for goto-zero button:
goto-zero-x = ""
goto-zero-y = ""
goto-zero-z = ""
goto-zero-a = ""

start-pause = std_start_pause
rewind      = halui.program.step
# probe-input for simulating a probe:
probe-z     = motion.probe-input
macro-3     = halui.mdi-command-03

half        = halui.spindle.0.stop
# synthesized per-axis buttons for half button:
half-x      = ""
half-y      = ""
half-z      = ""
half-a      = ""

zero        = ""
# synthesized per-axis buttons for zero button:
zero-x      = halui.mdi-command-12
zero-y      = halui.mdi-command-13
zero-z      = halui.mdi-command-14
zero-a      = halui.mdi-command-15

safe-z      = halui.mdi-command-10
# in this sim, home-all only works first time, hold down till finished:
home        = halui.home-all
macro-1     = halui.mdi-command-01
macro-2     = halui.mdi-command-02
spindle     = halui.spindle.0.start
step        = xhc-hb04.stepsize-up
mode        = ""
macro-6     = halui.mdi-command-06
macro-7     = halui.mdi-command-07
stop        = halui.program.stop
reset       = halui.estop.activate

[HALUI]
# these are examples, edit as required:
# a halui hal pin is created for each MDI_COMMAND below
# halui.mdi-command-00, halui.mdi-command-01,... etc
MDI_COMMAND=G0 X0 Y0 Z0
MDI_COMMAND=(debug, example: mdi-01)
MDI_COMMAND=(debug, example: mdi-02)
#03 M110: clears notifications
MDI_COMMAND=M110
MDI_COMMAND=(debug, example: mdi-04)
MDI_COMMAND=(debug, example: mdi-05)
MDI_COMMAND=(debug, example: mdi-06)
#07 M101: example print to stdout
MDI_COMMAND=M101
MDI_COMMAND=(debug, example: mdi-08)
MDI_COMMAND=(debug, example: mdi-09)
MDI_COMMAND=(debug, example: mdi-10)
MDI_COMMAND=(debug, example: mdi-11)
#12
MDI_COMMAND= G10 L20 P0 X0
#13
MDI_COMMAND= G10 L20 P0 Y0
#14
MDI_COMMAND= G10 L20 P0 Z0
#15
MDI_COMMAND= G10 L20 P0 C0
#*** End   #INCLUDE file: layout2.inc
 
[EMC] 
VERSION = 1.1
MACHINE = xhc-hb04 layout2 mm demo
 
[HAL] 
HALUI = halui
HALFILE = LIB:basic_sim.tcl
HALFILE = LIB:xhc-hb04.tcl
 
[XHC_HB04_CONFIG] 
# specify layout = n for LIB:xhc-hb04-layout{n}.cfg files
layout = 2
# coords: specify upto 4 letters from set {x y z a b c u v w}
# coords: switch labels are xyza but any unique 4 letters
# from the set {xyxabcuvw) can be used (if the coord exists)
coords = x y z c
# lowpass settings:
# coef: slows rate of change of output,  range: 0 < coef < 1
coefs = 1 1 1 1
# scale plus or minus, rotaries may require larger scale factor:
scales = 1 -1 1 1
# jogmode normal(default) or vnormal
jogmode = normal
# sequence 1: 0.001,0.010,0.100,1.000 (mm-based machine)
# sequence 2: 0.001,0.005,0.010,0.020 (inch-based machine)
# sequence 3: 0.001,0.010,0.100
# sequence 4: 0.001,0.005,0.010,0.020,0.050,0.100
# sequence 5: 0.001,0.010,0.050,0.100,1.000
sequence = 1
# require_pendant = yes|no: create xhc-hb04 hal pins when pendant noti
# connected at startup
require_pendant = no
# inch_or_mm = in | mm
inch_or_mm = mm
# mpg_accels: provision for reduced acceleration for manual mode jogging
mpg_accels = 50 50 500 600
 
[APPLICATIONS] 
APP = monitor-xhc-hb04
